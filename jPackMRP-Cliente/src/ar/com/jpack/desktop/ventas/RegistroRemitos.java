/*
 * RegistroRemitos.java
 *
 * Created on 3 de julio de 2008, 15:42
 */
package ar.com.jpack.desktop.ventas;

import ar.com.jpack.desktop.lov.Clientes;
import ar.com.jpack.desktop.DesktopApp;
import ar.com.jpack.desktop.DesktopView;
import ar.com.jpack.desktop.lov.Articulos;
import ar.com.jpack.helpers.LOVHelper;
import ar.com.jpack.transferencia.ClientesT;
import ar.com.jpack.transferencia.DetalleRemitosT;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.application.Action;
import org.jdesktop.application.Task;
import org.jdesktop.beansbinding.Binding;

/**
 *
 * @author  jmhanun
 */
public class RegistroRemitos extends javax.swing.JInternalFrame {

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        arrayList1 = new java.util.ArrayList<ar.com.jpack.transferencia.DetalleRemitosT>();
        remitoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        idClienteTextField = new javax.swing.JTextField();
        cuitTextField = new javax.swing.JTextField();
        nombresTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        fechaAcordadaFormattedTextField = new javax.swing.JFormattedTextField();
        situacionIvaTextField = new javax.swing.JTextField();
        articulosPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        articulosTable = new javax.swing.JTable();
        borrarButton = new javax.swing.JButton();
        agregarButton = new javax.swing.JButton();
        articuloCellRenderer1 = new ar.com.jpack.desktop.ventas.ArticuloCellRenderer();
        editarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        aceptarButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ar.com.jpack.desktop.DesktopApp.class).getContext().getResourceMap(RegistroRemitos.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        remitoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("remitoPanel.border.title"))); // NOI18N
        remitoPanel.setName("remitoPanel"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jTextField1.setEditable(false);
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        idClienteTextField.setEditable(false);
        idClienteTextField.setText(resourceMap.getString("idClienteTextField.text")); // NOI18N
        idClienteTextField.setName("idClienteTextField"); // NOI18N

        cuitTextField.setEditable(false);
        cuitTextField.setText(resourceMap.getString("cuitTextField.text")); // NOI18N
        cuitTextField.setName("cuitTextField"); // NOI18N

        nombresTextField.setEditable(false);
        nombresTextField.setText(resourceMap.getString("nombresTextField.text")); // NOI18N
        nombresTextField.setName("nombresTextField"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(ar.com.jpack.desktop.DesktopApp.class).getContext().getActionMap(RegistroRemitos.class, this);
        buscarButton.setAction(actionMap.get("showLOVClientes")); // NOI18N
        buscarButton.setText(resourceMap.getString("buscarButton.text")); // NOI18N
        buscarButton.setName("buscarButton"); // NOI18N

        fechaAcordadaFormattedTextField.setEditable(false);
        fechaAcordadaFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        fechaAcordadaFormattedTextField.setText(resourceMap.getString("fechaAcordadaFormattedTextField.text")); // NOI18N
        fechaAcordadaFormattedTextField.setName("fechaAcordadaFormattedTextField"); // NOI18N

        situacionIvaTextField.setEditable(false);
        situacionIvaTextField.setText(resourceMap.getString("situacionIvaTextField.text")); // NOI18N
        situacionIvaTextField.setName("situacionIvaTextField"); // NOI18N

        javax.swing.GroupLayout remitoPanelLayout = new javax.swing.GroupLayout(remitoPanel);
        remitoPanel.setLayout(remitoPanelLayout);
        remitoPanelLayout.setHorizontalGroup(
            remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remitoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(remitoPanelLayout.createSequentialGroup()
                        .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(remitoPanelLayout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(9, 9, 9))
                            .addGroup(remitoPanelLayout.createSequentialGroup()
                                .addComponent(cuitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(12, 12, 12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fechaAcordadaFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(situacionIvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(remitoPanelLayout.createSequentialGroup()
                        .addComponent(idClienteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombresTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarButton)))
                .addContainerGap())
        );

        remitoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cuitTextField, fechaAcordadaFormattedTextField, jTextField1, situacionIvaTextField});

        remitoPanelLayout.setVerticalGroup(
            remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(remitoPanelLayout.createSequentialGroup()
                .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fechaAcordadaFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idClienteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton)
                    .addComponent(nombresTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(remitoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cuitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(situacionIvaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        articulosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("articulosPanel.border.title"))); // NOI18N
        articulosPanel.setName("articulosPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        articulosTable.setName("articulosTable"); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, arrayList1, articulosTable, "jTable");
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idArticulo}"));
        columnBinding.setColumnName("Id Articulo");
        columnBinding.setColumnClass(ar.com.jpack.transferencia.ArticulosT.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cantidad}"));
        columnBinding.setColumnName("Cantidad");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idUnidMedida}"));
        columnBinding.setColumnName("Id Unid Medida");
        columnBinding.setColumnClass(ar.com.jpack.transferencia.UnidadesMedidaT.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${precioUnitario}"));
        columnBinding.setColumnName("Precio Unitario");
        columnBinding.setColumnClass(Double.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${importe}"));
        columnBinding.setColumnName("Importe");
        columnBinding.setColumnClass(Double.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(articulosTable);
        articulosTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("articulosTable.columnModel.title0")); // NOI18N
        articulosTable.getColumnModel().getColumn(0).setCellEditor(null);
        articulosTable.getColumnModel().getColumn(0).setCellRenderer(articuloCellRenderer1);
        articulosTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("articulosTable.columnModel.title1")); // NOI18N
        articulosTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("articulosTable.columnModel.title2")); // NOI18N
        articulosTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("articulosTable.columnModel.title3")); // NOI18N
        articulosTable.getColumnModel().getColumn(4).setHeaderValue(resourceMap.getString("articulosTable.columnModel.title4")); // NOI18N

        borrarButton.setAction(actionMap.get("borrarItem")); // NOI18N
        borrarButton.setName("borrarButton"); // NOI18N

        agregarButton.setAction(actionMap.get("agregarItem")); // NOI18N
        agregarButton.setName("agregarButton"); // NOI18N

        articuloCellRenderer1.setText(resourceMap.getString("articuloCellRenderer1.text")); // NOI18N
        articuloCellRenderer1.setName("articuloCellRenderer1"); // NOI18N

        editarButton.setAction(actionMap.get("editarItem")); // NOI18N
        editarButton.setName("editarButton"); // NOI18N

        javax.swing.GroupLayout articulosPanelLayout = new javax.swing.GroupLayout(articulosPanel);
        articulosPanel.setLayout(articulosPanelLayout);
        articulosPanelLayout.setHorizontalGroup(
            articulosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(articulosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(articulosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, articulosPanelLayout.createSequentialGroup()
                        .addComponent(articuloCellRenderer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                        .addComponent(agregarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editarButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(borrarButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))
                .addContainerGap())
        );

        articulosPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {agregarButton, borrarButton});

        articulosPanelLayout.setVerticalGroup(
            articulosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, articulosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(articulosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrarButton)
                    .addComponent(agregarButton)
                    .addComponent(articuloCellRenderer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarButton))
                .addContainerGap())
        );

        cancelarButton.setAction(actionMap.get("cancelar")); // NOI18N
        cancelarButton.setName("cancelarButton"); // NOI18N

        aceptarButton.setAction(actionMap.get("grabarRemito")); // NOI18N
        aceptarButton.setName("aceptarButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(remitoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(articulosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(361, Short.MAX_VALUE)
                .addComponent(aceptarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarButton)
                .addGap(6, 6, 6))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {aceptarButton, cancelarButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(remitoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(articulosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarButton)
                    .addComponent(aceptarButton))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarButton;
    private javax.swing.JButton agregarButton;
    private java.util.ArrayList<ar.com.jpack.transferencia.DetalleRemitosT> arrayList1;
    private ar.com.jpack.desktop.ventas.ArticuloCellRenderer articuloCellRenderer1;
    private javax.swing.JPanel articulosPanel;
    private javax.swing.JTable articulosTable;
    private javax.swing.JButton borrarButton;
    private javax.swing.JButton buscarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JTextField cuitTextField;
    private javax.swing.JButton editarButton;
    private javax.swing.JFormattedTextField fechaAcordadaFormattedTextField;
    private javax.swing.JTextField idClienteTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField nombresTextField;
    private javax.swing.JPanel remitoPanel;
    private javax.swing.JTextField situacionIvaTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    private static RegistroRemitos registroRemitos = new RegistroRemitos();
    private Clientes lOVClientes = null;
    private Articulos lOVArticulos = null;
    private ClientesT clienteT;

    /** Creates new form RegistroRemitos */
    public RegistroRemitos() {
        initComponents();
        fechaAcordadaFormattedTextField.setValue(new Date());
        articulosTable.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {

                    public void valueChanged(ListSelectionEvent e) {
                        borrarButton.setEnabled(articulosTable.getSelectedRow() != -1);
                    }
                });
        getRootPane().setDefaultButton(aceptarButton);

    }

    public static RegistroRemitos getRegistroRemitos() {
        return registroRemitos;

    }

    public ClientesT getClienteT() {
        return clienteT;
    }

    public void setClienteT(ClientesT clienteT) {
        this.clienteT = clienteT;
    }

    @Action
    public void showLOVClientes() {
        if (lOVClientes == null) {
            JFrame mainFrame = DesktopApp.getApplication().getMainFrame();
            lOVClientes = new Clientes(mainFrame, true);
            lOVClientes.setLocationRelativeTo(mainFrame);
        } else {
            lOVClientes.limpiar();
        }
        DesktopApp.getApplication().show(lOVClientes);
        setClienteT(lOVClientes.getClienteTSeleccionado());
        if (clienteT != null) {
            idClienteTextField.setText(clienteT.getIdCliente().toString());
            nombresTextField.setText(clienteT.getNombres());
            cuitTextField.setText(clienteT.getCuit());
//            situacionIvaTextField.setText(clienteT.getSituacionIva());
        } else {
            limpiar();
        }
    }

    @Action
    public void cancelar() {
        limpiar();
        this.dispose();
    }

    @Action
    public Task grabarRemito() {
        return new GrabarRemitoTask(DesktopApp.getApplication(), "Grabando remito...");
    }

//    private boolean isDetalleCompleto() {
//        boolean detalleCompleto = true;
////        Iterator<DetalleRemitosTHelper> it = arrayList1.iterator();
////        while (it.hasNext() && detalleCompleto) {
////            DetalleRemitosTHelper auxiliarDetalleRemitosT = it.next();
////            detalleCompleto = auxiliarDetalleRemitosT.isCompleto();
////        }
//        return detalleCompleto;
//    }
    private void limpiar() {
        setClienteT(null);
        idClienteTextField.setText("");
        nombresTextField.setText("");
        cuitTextField.setText("");
        situacionIvaTextField.setText("");
        fechaAcordadaFormattedTextField.setValue(new Date());
        if (!arrayList1.isEmpty()) {
//            Binding b = LOVHelper.findBinding(bindingGroup, arrayList1, articulosTable);
//            b.unbind();
//            arrayList1.clear();
//            b.bind();
//            articulosTable.repaint();
//            borrarButton.setEnabled(false);
        }
    }

    private class GrabarRemitoTask extends org.jdesktop.application.Task<String, Void> {

        String mensaje;
        DesktopView view;

        GrabarRemitoTask(DesktopApp app, String mensaje) {
            super(app);
            this.mensaje = mensaje;
            this.view = app.getDesktopView();
        }

        @Override
        protected String doInBackground() {
            view.setStatusMessage(mensaje);
            JOptionPane.showMessageDialog(null, "aqui se graba");
            cancelar();
            return "Remito grabado";
        }

        @Override
        protected void succeeded(String result) {
            super.succeeded(result);
            view.setStatusMessage(result);
        }
    }

    @Action
    public void borrarItem() {
        int n = JOptionPane.showConfirmDialog(null, "¿Desea eliminar los registros seleccionados?", "Aviso",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null);
        if (n == JOptionPane.YES_OPTION) {
            int[] selected = articulosTable.getSelectedRows();
            List<DetalleRemitosT> toRemove = new ArrayList<DetalleRemitosT>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                DetalleRemitosT aux = arrayList1.get(articulosTable.convertRowIndexToModel(selected[idx]));
                toRemove.add(aux);
            }
            Binding b = LOVHelper.findBinding(bindingGroup, arrayList1, articulosTable);
            b.unbind();
            arrayList1.removeAll(toRemove);
            b.bind();
            articulosTable.repaint();
        }
    }

    @Action
    public void agregarItem() {
        DetalleRemitosT nuevoDetalle = new DetalleRemitosT();
        if (lOVArticulos == null) {
            JFrame mainFrame = DesktopApp.getApplication().getMainFrame();
            lOVArticulos = new Articulos(mainFrame, true);
            lOVArticulos.setLocationRelativeTo(mainFrame);
        } else {
            lOVArticulos.limpiar();
        }
        DesktopApp.getApplication().show(lOVArticulos);

        if (lOVArticulos.getArticuloTSeleccionado() != null) {
            nuevoDetalle.setIdArticulo(lOVArticulos.getArticuloTSeleccionado());
            nuevoDetalle.setIdUnidMedida(lOVArticulos.getArticuloTSeleccionado().getIdUnidMedida());
//////////////////////////////////////////////////////////////////

            JFrame mainFrame = DesktopApp.getApplication().getMainFrame();
            ModificaArticulo modifica = new ModificaArticulo(mainFrame, true);
            modifica.setLocationRelativeTo(mainFrame);
            modifica.setTitle(nuevoDetalle.getIdArticulo().getCodigo() + " - " + nuevoDetalle.getIdArticulo().getDescripcion());
            DesktopApp.getApplication().show(modifica);
            nuevoDetalle.setCantidad(modifica.getCantidad());
            nuevoDetalle.setPrecioUnitario(modifica.getPrecioUnitario());
            nuevoDetalle.setImporte(modifica.getCantidad() * modifica.getPrecioUnitario());

            if (nuevoDetalle.getCantidad() != 0) {
                Binding b = LOVHelper.findBinding(bindingGroup, arrayList1, articulosTable);
                b.unbind();
                arrayList1.add(nuevoDetalle);
                b.bind();
                articulosTable.getColumnModel().getColumn(0).setCellRenderer(articuloCellRenderer1);
                articulosTable.repaint();
            }
//////////////////////////////////////////////////////////////////

        } else {
            limpiar();
        }
    }

    @Action
    public void editarItem() {
        int[] selected = articulosTable.getSelectedRows();
        if (selected.length == 1) {
            DetalleRemitosT aux = arrayList1.get(articulosTable.convertRowIndexToModel(selected[0]));
            arrayList1.remove(aux);
            JFrame mainFrame = DesktopApp.getApplication().getMainFrame();
            ModificaArticulo modifica = new ModificaArticulo(mainFrame, true);
            modifica.setLocationRelativeTo(mainFrame);
            modifica.setTitle(aux.getIdArticulo().getCodigo() + " - " + aux.getIdArticulo().getDescripcion());
            DesktopApp.getApplication().show(modifica);
            aux.setCantidad(modifica.getCantidad());
            aux.setPrecioUnitario(modifica.getPrecioUnitario());
            aux.setImporte(modifica.getCantidad() * modifica.getPrecioUnitario());

            if (aux.getCantidad() != 0) {
                Binding b = LOVHelper.findBinding(bindingGroup, arrayList1, articulosTable);
                b.unbind();
                arrayList1.add(aux);
                b.bind();
                articulosTable.repaint();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar solo un articulo");
        }
    }
}